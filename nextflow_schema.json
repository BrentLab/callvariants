{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/BrentLab/callvariants/master/nextflow_schema.json",
    "title": "BrentLab/callvariants pipeline parameters",
    "description": "a variant caller intended for both genotype checks and BSA data processing for the Brent and Doering labs",
    "type": "object",
    "definitions": {
        "fastq_options": {
            "title": "fastq options",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "skip_fastqc": {
                    "type": "boolean",
                    "description": "defaults to false. set to true to skip fastqc"
                },
                "skip_trimming": {
                    "type": "boolean",
                    "description": "defaults to false. set to true to skip trimmomatic"
                },
                "min_trimmed_reads": {
                    "type": "integer",
                    "default": 10000,
                    "description": "defaults to 10000 reads. libraries with less than this after trimming will not be sent for downstream processing"
                },
                "umi_discard_reads": {
                    "type": "string",
                    "description": "UMI is not intentionally configured in this pipeline, though it is an option. the user is responsible for all configuration. See the nf-core fastq_fastqc_umitools_trimgaolore module for details on this parameter"
                },
                "skip_umi_extract": {
                    "type": "boolean",
                    "description": "UMI is not intentionally configured in this pipeline, though it is an option. the user is responsible for all configuration. See the nf-core fastq_fastqc_umitools_trimgaolore module for details on this parameter"
                },
                "with_umi": {
                    "type": "boolean",
                    "description": "UMI is not intentionally configured in this pipeline, though it is an option. the user is responsible for all configuration. See the nf-core fastq_fastqc_umitools_trimgaolore module for details on this parameter"
                }
            }
        },
        "variant_calling": {
            "title": "Variant calling",
            "type": "object",
            "description": "",
            "default": "",
            "properties": {
                "cnvpytor_conf_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the cnvpytor configuration file. This is not necessary for the cnvpytor default configured organisms. For KN99, one is available in assets/genome_files. This is set automatically in the kn99_haploid profile",
                    "hidden": true
                },
                "cnvpytor_gc_file": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to the cnvpytor GC file. This is not necessary for the organisms configured by default in cnvpytor. One for KN99 is available in assets/genome_files and is set automatically in the kn99_haploid profile",
                    "hidden": true
                },
                "snpeff_db_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "snpEff config file. This is not necessary for the organisms configured by default in snpeff. A config file suitable for KN99 is provided in assets/genome_files. This is set in the kn99_haploid profile",
                    "hidden": true
                },
                "snpeff_config_key": {
                    "type": "string",
                    "description": "The organism key in the snpEff config. This is set in the kn99_haploid profile for KN99",
                    "hidden": true
                },
                "snpeff_db": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "Path to the snpEff database. This is not necessary for organisms configured by default in snpEff. A database for KN99 exists in assets/genome_files and is set automatically in the KN99_haploid profile",
                    "hidden": true
                },
                "region_bed_mask": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Path to a bed file of regions to filter (remove) from the filtered variant calls. A file made by daniel, probably with NCBI dustmask, is in assets/genome files. This is set in the kn99_haploid profile. However, no information exists on how this file was actually created -- the command, version, etc was not recorded",
                    "hidden": true
                },
                "call_individual_variants": {
                    "type": "boolean",
                    "default": true,
                    "description": "By defualt, true. Set this to false to avoid calling variants on individual samples. For instance, for BSA, you may not care to call variants on the individual samles and instead only call variants jointly"
                },
                "call_joint_variants": {
                    "type": "boolean",
                    "default": true,
                    "description": "By default, true, Set to false to avoid calling variants jointly, within samplesheet group"
                }
            }
        },
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "schema": "assets/schema_input.json",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 3 columns, and a header row.",
                    "fa_icon": "fas fa-file-csv"
                },
                "additional_fasta": {
                    "type": "string",
                    "format": "file-path",
                    "mimetype": "test/json",
                    "schema": "assets/additional_fasta_schema.json",
                    "description": "A json file that describes the set of samples which correspond to a given additional fasta file"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "hidden": true
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature",
                    "hidden": true
                },
                "save_intermediates": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "Set this flag to save intermediate outputs, eg un-zipped and indexed vcf files from TIDDIT."
                },
                "debug": {
                    "type": "boolean",
                    "hidden": true,
                    "description": "When save_intermediates is set to true, some steps still will not output. Set debug, inaddition to save_intermediates, to save absolutely all of the output"
                },
                "save_reference": {
                    "type": "boolean",
                    "description": "Set this to true to save the reference genome in the pipeline `outdir`. This is useful when you include additional fasta files"
                },
                "platform": {
                    "type": "string",
                    "default": "platform_not_set",
                    "hidden": true,
                    "description": "Name of the sequencing machine used to produce the raw data"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "fasta_fai": {
                    "type": "string",
                    "description": "Path to the fasta fai index file. Note that this is not currently used since in the case of samples with additional fasta files the indicies need to be re-made.",
                    "hidden": true,
                    "format": "file-path"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Instutional configuration profile contact",
                    "hidden": true
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional proflie documentation url",
                    "hidden": true
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "pattern": "^(\\d+\\.?\\s*(s|m|h|d|day)\\s*)+$",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                },
                "nucleotides_per_second": {
                    "type": "integer",
                    "default": 1000,
                    "hidden": true,
                    "description": "This controls how many parts the alignment files are split into for variant calling processing. Increease the number to decrease the number of splits"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "validationShowHiddenParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-eye-slash",
                    "description": "Show all params when using `--help`",
                    "hidden": true,
                    "help_text": "By default, parameters set as _hidden_ in the schema are not shown on the command line when a user runs with `--help`. Specifying this option will tell the pipeline to show all parameters."
                },
                "validationFailUnrecognisedParams": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters fails when an unrecognised parameter is found.",
                    "hidden": true,
                    "help_text": "By default, when an unrecognised parameter is found, it returns a warinig."
                },
                "validationLenientMode": {
                    "type": "boolean",
                    "fa_icon": "far fa-check-circle",
                    "description": "Validation of parameters in lenient more.",
                    "hidden": true,
                    "help_text": "Allows string values that are parseable as numbers or booleans. For further information see [JSONSchema docs](https://github.com/everit-org/json-schema#lenient-mode)."
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/fastq_options"
        },
        {
            "$ref": "#/definitions/variant_calling"
        },
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/reference_genome_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}
