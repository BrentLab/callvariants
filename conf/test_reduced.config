/*
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Nextflow config file for running full-size tests
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    Defines input files and everything required to run a full size pipeline test.

    Use as follows:
        nextflow run nf-core/BrentLabcallvariants -profile test_full,kn99_haploid,<docker/singularity> --outdir <OUTDIR>

----------------------------------------------------------------------------------------
*/

params {
    config_profile_name        = 'Full test profile'
    config_profile_description = 'Full test dataset to check pipeline function'

    input                      = "https://github.com/BrentLab/callvariants/raw/main/assets/test_multi_sample.csv"
    outdir                     = 'results'
    debug                      = false
    save_reference             = false
    save_intermediates         = false
    call_individual_variants   = true
    call_joint_variants        = true
    snpeff_config_key          = 'ASM221672v1'
    snpeff_db                  = "${projectDir}/assets/genome_files/snpeff_db"
    snpeff_db_config           = "${projectDir}/assets/genome_files/snpEff.config"
    fasta                      = "https://raw.githubusercontent.com/BrentLab/callvariants/main/assets/genome_files/kn99_chr1_chr2.fasta"
    cnvpytor_conf_file         = "https://github.com/BrentLab/callvariants/raw/main/assets/genome_files/kn99_cnvpytor_haploid_genome_conf.py"
    cnvpytor_gc_file           = "https://github.com/BrentLab/callvariants/raw/main/assets/genome_files/kn99_with_markers_gc.pytor"
    region_bed_mask            = "https://github.com/BrentLab/callvariants/raw/main/assets/genome_files/dustmasked.KN99.bed"
}

process{

    // set variables here that are used in multiple places in the
    // configurations below
    def CNV_BINS = "1000 10000 100000"
    def MIN_CNV_DEPTH = 1.7
    def PLOIDY = "1"
    def MIN_MAPQ = 20
    def MIN_BASE_QUAL = 10
    def MIN_ALTERNATE_FRACTION = 0.75
    def MIN_COVERAGE = 10

    withName: PICARD_MARKDUPLICATES {
        cpus   = { check_max( 1     * task.attempt, 'cpus'    ) }
        memory = { check_max( 10.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 1.h   * task.attempt, 'time'    ) }
    }


    withName: CNVPYTOR_VIEW {

        ext.args = [
            bins: CNV_BINS,
            min_cnv_depth: MIN_CNV_DEPTH
        ]

    }

    withName: CNVPYTOR_VIEW_TSV_FLTR {

        ext.args = [
            bins: CNV_BINS,
            min_cnv_depth: MIN_CNV_DEPTH
        ]

    }

    withName: TIDDIT_SV {

        ext.args = [
            "-n " + PLOIDY,
            "-q 20",
            "-c 10",
            "--force_ploidy",
            "--p_ratio 0.3",
            "--r_ratio 0.3"
        ].join(' ').trim()

    }

    // note that this could be split into FREEBAYES_INDIVIDUAL and
    // FREEBAYES_JOINT if you wish to configure them separately
    withName: '.*FREEBAYES_.*' {
        cpus   = { check_max( 1     * task.attempt, 'cpus'    ) }
        memory = { check_max( 5.GB * task.attempt, 'memory'  ) }
        time   = { check_max( 10.h   * task.attempt, 'time'    ) }

        ext.args = [
            "--genotype-qualities",
            "--ploidy " + PLOIDY,
            "--min-mapping-quality " + MIN_MAPQ,
            "--min-base-quality " + MIN_BASE_QUAL,
            "--min-alternate-fraction " + MIN_ALTERNATE_FRACTION,
            "--min-coverage " + MIN_COVERAGE
        ].join(' ').trim()

    }

    withName: '.*:SNPEFF.*' {

        ext.args = [
            "-v ${params.snpeff_config_key}"
            ].join(' ').trim()
    }

   // currently, both joint and individual vcfs go through this one filter
   // step. It may make sense to split the VCFTOOLS filter step into INDIVIDUAL
   // and JOINT at
   withName: VCFTOOLS {

        ext.args = [
            "--exclude-bed",
            "--recode",
            "--recode-INFO-all",
            "--remove-filtered-all",
            "--remove-filtered-geno-all",
            "--maf " + MIN_ALTERNATE_FRACTION,
            "--minQ " + MIN_MAPQ,
            "--minDP " + MIN_COVERAGE
        ].join(' ').trim()

   }
}
